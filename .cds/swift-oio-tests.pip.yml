version: v.10
name: swift-oio-tests
jobs:
  - job: Run oio tests
    steps:

      - name: Checkout application
        checkout: '{{ .cds.workspace }}'

      - name: Install dependencies
        script: |+
          #!/bin/bash
          set -x
          export DEBIAN_FRONTEND=noninteractive
          curl http://mirror2.openio.io/pub/repo/openio/APT-GPG-KEY-OPENIO-0 | apt-key add -
          apt-add-repository "deb http://mirror2.openio.io/pub/repo/openio/sds/20.04/ubuntu/ bionic/"
          apt-add-repository ppa:longsleep/golang-backports
          apt update
          # rabbitmq-server is not is the list as only necessary for oio-tests
          apt-get install -y rabbitmq-server $(tr '\n' ' ' < .cds/deps-ubuntu-bionic.txt)
          systemctl stop redis.service
          systemctl disable redis.service
          virtualenv -p /usr/bin/python3 $HOME/swiftenv
          . $HOME/swiftenv/bin/activate
          pip install --upgrade pip setuptools virtualenv tox -r test-requirements.txt
          test -n "{{.cds.env.SDS_BRANCH}}" && git config --local submodule.oio-sds.branch "{{.cds.env.SDS_BRANCH}}" || true
          git submodule update --init --remote
          cd third_party/oio-sds && pip install -e . && cd ../..
          pip install -e .
          rabbitmq-plugins enable rabbitmq_management
          wget -q https://github.com/apple/foundationdb/releases/download/${FDB_VERSION}/foundationdb-clients_${FDB_VERSION}-1_amd64.deb
          wget -q https://github.com/apple/foundationdb/releases/download/${FDB_VERSION}/foundationdb-server_${FDB_VERSION}-1_amd64.deb
          dpkg -i foundationdb-clients_6.3.23-1_amd64.deb foundationdb-server_6.3.23-1_amd64.deb
          systemctl stop foundationdb.service
          systemctl disable foundationdb.service

      - name: Run oio functional tests
        script:
          - pgrep rsyslogd || rsyslogd &
          - sysctl -w kernel.core_pattern='/tmp/core.%p.%E'
          - ulimit -c unlimited
          - ulimit -n 8192
          - . $HOME/swiftenv/bin/activate
          - ./oio_tests/run_tests.sh '{{.cds.env.TEST_SUITE}}'

      - name: Save coverage information
        always_executed: true
        script:
          - . $HOME/swiftenv/bin/activate
          - coverage combine
          - mv .coverage .coverage.oio.{{.cds.env.TEST_SUITE}}
          - worker upload --tag='{{.cds.version}}' '{{.cds.workspace}}/.coverage.oio.{{.cds.env.TEST_SUITE}}'

      - optional: true
        name: Save tests report
        script:
          - "[ ! -f tests_report.xml ] || mv tests_report.xml 'tests_report.oio.{{.cds.env.TEST_SUITE}}.xml'"
          - "[ ! -f 'tests_report.oio.{{.cds.env.TEST_SUITE}}.xml' ] || worker upload --tag='{{.cds.version}}' 'tests_report.oio.{{.cds.env.TEST_SUITE}}.xml'"

      - optional: true
        always_executed: true
        jUnitReport: '{{.cds.workspace}}/tests_report.*.xml'

    requirements:
      - model: Ubuntu-18.04-VM-b2-15
