name: swift
version: v2.0

workflow:
  root:
    pipeline: swift-root
    application: swift

  test-code-quality:
    pipeline: swift-code-tests
    application: swift
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"
    depends_on:
      - root

  mirror:
    pipeline: swift-mirror
    application: swift
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.proj.mirror_to_github
          operator: eq
          value: "true"

  build:
    pipeline: swift-build
    application: swift
    environment: swift-build
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  tests-unit:
    pipeline: swift-tests
    application: swift
    environment: swift-tests-unit-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  oio-tests-unit:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-unit-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  oio-tests-s3:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-s3-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  oio-tests-s3-basic:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-s3-basic-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  oio-tests-iam:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-iam-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  oio-tests-intelligent-tiering:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-intelligent-tiering-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  oio-tests-encryption:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-encryption-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  ceph-s3-tests:
    pipeline: swift-oio-tests
    application: swift
    environment: ceph-s3tests-env
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"
    optional: true

  tests-reports:
    pipeline: swift-tests-reports
    application: swift
    depends_on:
      - ceph-s3-tests
      - tests-unit
      - oio-tests-unit
      - oio-tests-s3
      - oio-tests-s3-basic
      - oio-tests-iam
      - oio-tests-intelligent-tiering
      - oio-tests-encryption
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: ne
          value: "cds.scheduler"

  clean-artifacts:
    pipeline: swift-clean-artifacts
    application: swift
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.triggered_by.username
          operator: eq
          value: "cds.scheduler"

metadata:
  default_tags: git.branch,git.author,git.tag

retention_policy: "if(cds_triggered_by_username == 'cds.scheduler') then\n  return run_days_before < 1\nend\nif(has_git_branch == \"true\") then\n  if(git_branch_exist == \"true\") then    \n    return run_days_before < 365\n  else\n    return run_days_before < 2\n  end\nelse\n  return run_days_before < 365\nend"

integrations:
  artifactory-pu-objectstorage-swift:
    type: artifact_manager

notifications:
  - type: vcs
    settings:
      on_success: always
      template:
        disable_comment: true

hooks:
  root:
    - type: Scheduler
      config:
        # twice a day
        cron: "17 13,21 * * *"
        timezone: UTC
