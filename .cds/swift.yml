name: swift
version: v2.0

workflow:
  root:
    pipeline: swift-root
    application: swift
    payload:
      "git.author": ""
      "git.branch": "feature/oio-backend"
      "git.hash": ""
      "git.hash.before": ""
      "git.message": ""
      "git.repository": OPENIO/swift
      "git.tag": ""
      "build_only": "false"
      "clean_only": "false"
      "send_webex_notif": "false"


  test-code-quality:
    pipeline: swift-code-tests
    application: swift
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"
    depends_on:
      - root

  mirror:
    pipeline: swift-mirror
    application: swift
    depends_on:
      - root
    conditions:
      check:
        - variable: cds.proj.mirror_to_github
          operator: eq
          value: "true"

  build:
    pipeline: swift-build
    application: swift
    environment: swift-build
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and (cds_manual == "true" or git_branch == "feature/oio-backend" or build_only == "true")

  tests-unit:
    pipeline: swift-tests
    application: swift
    environment: swift-tests-unit-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  oio-tests-unit:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-unit-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  oio-tests-s3:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-s3-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  oio-tests-s3-basic:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-s3-basic-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  oio-tests-iam:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-iam-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  oio-tests-cold-archive:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-cold-archive-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  oio-tests-encryption:
    pipeline: swift-oio-tests
    application: swift
    environment: swift-oio-tests-encryption-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  ceph-s3-tests:
    pipeline: swift-oio-tests
    application: swift
    environment: ceph-s3tests-env
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"
    optional: true

  tests-reports:
    pipeline: swift-tests-reports
    application: swift
    depends_on:
      - ceph-s3-tests
      - tests-unit
      - oio-tests-unit
      - oio-tests-s3
      - oio-tests-s3-basic
      - oio-tests-iam
      - oio-tests-cold-archive
      - oio-tests-encryption
    conditions:
      script: |+
        return clean_only ~= "true" and build_only ~= "true"

  clean-artifacts:
    pipeline: swift-clean-artifacts
    application: swift
    depends_on:
      - root
    conditions:
      script: |+
        return clean_only == "true"

metadata:
  default_tags: git.branch,git.author,git.tag

retention_policy: |+
    if (cds_triggered_by_username == 'cds.scheduler') then
      return run_days_before < 1
    end
    if (has_git_branch == "true") then
      if(git_branch_exist == "true") then
        return run_days_before < 365
      else
        return run_days_before < 2
      end
    else
      return run_days_before < 365
    end

integrations:
  artifactory-pu-objectstorage-swift:
    type: artifact_manager

notifications:
  - type: vcs
    settings:
      on_success: always
      template:
        disable_comment: true

hooks:
  root:
    - name: Clean artifacts and mirror to GitHub
      type: Scheduler
      config:
        # twice a day
        cron: "17 13,21 * * *"
        timezone: UTC
        payload: |-
          {
            "git.author": "",
            "git.branch": "feature/oio-backend",
            "git.hash": "",
            "git.hash.before": "",
            "git.message": "",
            "git.repository": "OPENIO/swift",
            "git.tag": "",
            "clean_only": "true",
            "send_webex_notif": "false"
          }

    - name: Build everything (to check dependencies)
      type: Scheduler
      config:
        # twice a week
        cron: "42 5 * * 1,4"
        timezone: UTC
        payload: |-
          {
            "git.author": "",
            "git.branch": "feature/oio-backend",
            "git.hash": "",
            "git.hash.before": "",
            "git.message": "",
            "git.repository": "OPENIO/swift",
            "git.tag": "",
            "send_webex_notif": "true"
          }
